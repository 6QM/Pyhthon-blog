"""
描述
给定一个整数，请将该数各个位上数字反转得到一个新数。新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零（参见样例2）。

输入
输入共 1 行，一个整数N。

-1,000,000,000 ≤ N≤ 1,000,000,000。
输出
输出共 1 行，一个整数，表示反转后的新数。
样例输入
样例 #1：
123

样例 #2：
-380
样例输出
样例 #1：
321

样例 #2：
-83
"""
n0 = input()
n = abs(int(n0))
m = int(n)
l = len(str(n))
str0 = ""
if "-" not in n0:  # 先考虑正数,末尾不为0的情况
    while l >= 1 :
        m0 = m
        m %= 10         #获得原数的个位数、十位数
        # print(str(m),end="")
        str0 += str(m)
        m = (m0-m)//10
        l -= 1
    print(int(str0))    #结果转为整型，自动去掉卡前面多余的0

    # print(l1)
# 末尾有多个0
else:  # 考虑负数（剔除符号，最后一个角标值=l-1）
    print("-",end="")
    while l >= 1 :
        m0 = m
        m %= 10         #获得原数的个位数、十位数
        # print(str(m),end="")
        str0 += str(m)
        m = (m0-m)//10
        l -= 1
    print(int(str0))
